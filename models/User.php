<?php

namespace app\models;

use Yii;
use yii\web\ForbiddenHttpException;

/**
 * This is the model class for table "user".
 *
 * @property int $id
 * @property string $email
 * @property string $password
 * @property string $role
 */
class User extends \yii\db\ActiveRecord implements \yii\web\IdentityInterface
{

    const ROLE_ADMIN = 'admin';
    const ROLE_MANAGER = 'manager';


    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'user';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['email', 'password', 'role'], 'required'],
            [['email', 'password'], 'string', 'max' => 255],
            [['email'], 'unique'],
            [['email'], 'email'],
            [['role'], 'string', 'max' => 10],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'email' => 'Email',
            'password' => 'Password',
            'role' => 'Role',
        ];
    }

    public static function findIdentity($id)
    {
        $model = self::findOne($id);
        return ($model!=null) ? new static($model) : null;
    }

    public static function findIdentityByAccessToken($token, $type = NULL)
    {
        $model = self::findBySql("SELECT * FROM users WHERE password='$token'")->one();
        if($model!=null)
            return new static($model);

        return null;
    }

    public function getId()
    {
        return $this->id;
    }

    public function getAuthKey()
    {
        return $this->password;
    }

    public function validateAuthKey($authKey)
    {
        return $this->password === $authKey;
    }

    public static function findByUsername($email, $pass)
    {
        /* @var $model User */
        $model = self::findBySql("SELECT * FROM user WHERE email='$email'")->one();
        if($model!=null)
        {
            if (!Yii::$app->security->validatePassword($pass, $model->password)){
                throw new ForbiddenHttpException('Неверный email или пароль','403');
            }
            $userRole = Yii::$app->authManager->getRole($model->role);
            Yii::$app->authManager->assign($userRole, $model->getId());
            return new static($model);
        }

        throw new ForbiddenHttpException('Неверный email или пароль','403');
    }


    public function getRole()
    {
        return $this->role;
    }



    public static function getRoleArray()
    {
        return [
            self::ROLE_MANAGER => 'Менеджер',
            self::ROLE_ADMIN => 'Админ',
        ];
    }

    public function beforeSave($insert)
    {
        if ($this->isNewRecord){
            $this->password = Yii::$app->security->generatePasswordHash($this->password);
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
